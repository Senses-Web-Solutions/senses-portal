<?php

namespace App\Http\Controllers\Api;

use App\Models\{{ ucCamelModel }};
use App\Http\Controllers\Api\Controller;
use Illuminate\Http\Request;
use App\Http\Requests\{{ ucCamelPluralModel }}\List{{ ucCamelModel }}Request;
use App\Http\Requests\{{ ucCamelPluralModel }}\Show{{ ucCamelModel }}Request;
use App\Http\Requests\{{ ucCamelPluralModel }}\Create{{ ucCamelModel }}Request;
use App\Http\Requests\{{ ucCamelPluralModel }}\Delete{{ ucCamelModel }}Request;
use App\Http\Requests\{{ ucCamelPluralModel }}\Update{{ ucCamelModel }}Request;
use App\Actions\{{ ucCamelPluralModel }}\Generate{{ ucCamelModel }}ShowCache;
use App\Actions\{{ ucCamelPluralModel }}\Create{{ ucCamelModel }};
use App\Actions\{{ ucCamelPluralModel }}\Update{{ ucCamelModel }};
use App\Actions\{{ ucCamelPluralModel }}\Delete{{ ucCamelModel }};
use App\Support\QueryBuilder;
use App\Traits\ApiResponse;
use Illuminate\Http\JsonResponse;
use Illuminate\Support\Facades\Auth;

/**
 * @group {{ ucCamelModel }}
 *
 * APIs for managing {{ pluralModel }}
 */
class {{ ucCamelModel }}Controller extends Controller
{
    use ApiResponse;

    /**
     * index()
     *
     * Reads and returns a collection of all {{ pluralModel }}.
     * <aside><ul><li>list-{{ model }}</li></ul></aside>
     */
    public function index(List{{ ucCamelModel }}Request $request)
    {
        return QueryBuilder::for({{ ucCamelModel }}::class)->list();
    }

    /**
     * show()
     *
     * Reads and returns a {{ model }}.
     * <aside><ul><li>show-{{ model }}</li></ul></aside>
     * @urlParam {{ model }} integer {{ ucCamelModel }} ID. Example: 1
     */
    public function show(Show{{ ucCamelModel }}Request $request, int $id, Generate{{ ucCamelModel }}ShowCache $generate{{ ucCamelModel }}ShowCache)
    {
        return $generate{{ ucCamelModel }}ShowCache->execute($id);
    }

    /**
     * store()
     *
     * Creates, saves and returns a {{ model }}.
     * <aside><ul><li>create-{{ model }}</li></ul></aside>
     */
    public function store(Create{{ ucCamelModel }}Request $request, Create{{ ucCamelModel }} $create{{ ucCamelModel }})
    {
        return $this->respond($create{{ ucCamelModel }}->execute($request->all()));
    }

    /**
     * update()
     *
     * Updates, saves and returns a {{ model }}.
     * <aside><ul><li>update-{{ model }}</li></ul></aside>
     * @urlParam {{ model }} integer {{ ucCamelModel }} ID. Example: 1
     */
    public function update(Update{{ ucCamelModel }}Request $request, int $id, Update{{ ucCamelModel }} $update{{ ucCamelModel }})
    {
        return $this->respond($update{{ ucCamelModel }}->execute($id, $request->all()));
    }

    /**
     * destroy()
     *
     * Deletes a {{ model }}.
     * <aside><ul><li>delete-{{ model }}</li></ul></aside>
     * @urlParam {{ model }} integer {{ ucCamelModel }} ID. Example: 1
     */
    public function destroy(Delete{{ ucCamelModel }}Request $request, int $id, Delete{{ ucCamelModel }} $delete{{ ucCamelModel }})
    {
        return $this->respondDeleted($delete{{ ucCamelModel }}->execute($id));
    }

{{ hasOne }}{{ belongsTo }}{{ hasMany }}{{ hasOneThrough }}{{ hasManyThrough }}{{ morphMany }}{{ morphToMany }}{{ morphOne }}{{ morphedByMany }}}

//Generated {{ generationDate }}
